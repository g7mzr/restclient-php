<?php
/**
 * This file is part of RESTCLIENT
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * @package restclient-php
 * @subpackage tests
 * @author   Sandy McNeil <g7mzrdev@gmail.com>
 * @copyright (c) 2019, Sandy McNeil
 * @license https://github.com/g7mzr/restclient-php/blob/master/LICENSE GNU General Public License v3.0
 *
 */

namespace g7mzr\webtemplate\phpunit;

require_once __DIR__ . '/constants.php';

use PHPUnit\Framework\TestCase;
use g7mzr\restclient\http\APIClient;
use g7mzr\restclient\options\Options;
use g7mzr\restclient\http\request\Request;
use g7mzr\restclient\http\response\DecodeResponse;

/**
 * Version Endpoint Tests
 *
 * This class contains the WEBTEMPLATE RrestFull API Version Endpoint Tests
 */
class RestAPITest extends TestCase
{
    /**
     * ApiClient
     * @var \g7mzr\restclient\http\APIClient
     * @access protected
     */
    protected $apiclient;

    /**
     * Options
     * @var \g7mzr\restclient\options\Options
     * @access protected
     */
    protected $options;

    /**
     * This function is called prior to any tests being run.
     * Its purpose is to set up any variables that are needed to tun the tests.
     *
     * @return void
     *
     * @access protected
     */
    protected function setUp()
    {
        $this->options = new Options();
        $this->options->setBaseURL(URL);
        $this->options->setCookieFile(__DIR__ . "/cookies.txt");

        if (PROXY === true) {
            $this->options->setProxyServer(HTTPPROXY);
        }
        $this->apiclient = new APIClient($this->options);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     *
     * @return void
     *
     * @access protected
     */
    protected function tearDown()
    {

    }

    /**
     * testVersionNotloggedIn
     *
     * This function tests that the basic version information can be obtained from
     * the API when the user is not logged in.
     *
     * @group unittest
     * @group error
     *
     * @return void
     *
     * @access protected
     */
    public function testGETNoARGS()
    {
        $getrequest = new Request();
        $getrequest->setEndPoint("api/v1/version/1/jjj");

        $runok = $this->apiclient->httpGet($getrequest);
        if ($runok == false) {
            $this->fail("cURL failed to run correctly for test: " .  __FUNCTION__);
        }


        // Get the respose data
         $getresponse = $this->apiclient->getResponse();

        // Check the http response
        $httpresponse = $getresponse->getHTTPResponce();
        $this->assertEquals("200", $httpresponse[1]);
        $this->assertEquals("OK", $httpresponse[2]);

        // Check the returned data
        $processeddata = $getresponse->getProcessedData();
        print_r($processeddata);
    }
}
